{"ast":null,"code":"var _jsxFileName = \"/Users/tatvajain/Downloads/culturoquest-frontend/src/components/games/FactOrFiction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport sagaData from '../../data/culturalTrivia.json';\nimport { useGame } from '../../context/GameContext';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport GameSummary from '../common/GameSummary';\n\n// --- Smart Question Selector ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getSmartQuestions = (questionBank, answeredQIDs, num) => {\n  const unanswered = questionBank.filter(q => !answeredQIDs.has(q.id));\n  const shuffledUnanswered = [...unanswered].sort(() => 0.5 - Math.random());\n  let selected = shuffledUnanswered.slice(0, num);\n  if (selected.length < num) {\n    const answered = questionBank.filter(q => answeredQIDs.has(q.id));\n    const shuffledAnswered = [...answered].sort(() => 0.5 - Math.random());\n    selected.push(...shuffledAnswered.slice(0, num - selected.length));\n  }\n  return selected;\n};\nconst correctSound = new window.Tone.Synth().toDestination();\nconst wrongSound = new window.Tone.Synth({\n  oscillator: {\n    type: 'square'\n  }\n}).toDestination();\n\n// --- New UI Sub-Component ---\nconst StatementCard = ({\n  statement,\n  onSelect,\n  isAnswered,\n  isSelected,\n  isFiction\n}) => {\n  const getCardStyle = () => {\n    if (!isAnswered) return 'bg-white hover:bg-amber-50 hover:shadow-xl';\n    if (isFiction) return 'bg-green-100 border-green-400';\n    if (isSelected && !isFiction) return 'bg-red-100 border-red-400';\n    return 'bg-white opacity-60';\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    onClick: () => onSelect(statement),\n    className: `relative p-6 rounded-lg border-2 cursor-pointer transition-all duration-300 h-full flex flex-col justify-center ${getCardStyle()}`,\n    whileHover: !isAnswered ? {\n      y: -10,\n      scale: 1.05\n    } : {},\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-slate-700 font-medium text-lg\",\n      children: statement.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), isAnswered && /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        scale: 0,\n        opacity: 0,\n        rotate: -30\n      },\n      animate: {\n        scale: 1,\n        opacity: 1,\n        rotate: -15\n      },\n      className: `absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-5xl font-black uppercase tracking-widest pointer-events-none ${isFiction ? 'text-red-500/80' : 'text-green-500/80'}`,\n      children: isFiction ? 'Fiction' : 'Fact'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = StatementCard;\nexport default function FactOrFiction({\n  onGameComplete\n}) {\n  _s();\n  const {\n    addPoints,\n    correctlyAnsweredQIDs,\n    markQuestionCorrect\n  } = useGame();\n  const gameData = sagaData.games.factOrFiction;\n  const [gameQuestions, setGameQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [roundScore, setRoundScore] = useState(0);\n  const [selected, setSelected] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  useEffect(() => {\n    setGameQuestions(getSmartQuestions(gameData.questionBank, correctlyAnsweredQIDs, 5));\n  }, []);\n  const currentSet = gameQuestions[currentQuestionIndex];\n  const handleNextQuestion = () => {\n    const nextQuestionIndex = currentQuestionIndex + 1;\n    if (nextQuestionIndex < gameQuestions.length) {\n      setCurrentQuestionIndex(nextQuestionIndex);\n      setIsAnswered(false);\n      setSelected(null);\n    } else {\n      setIsGameOver(true);\n      if (correctAnswers === 5) {\n        addPoints(50);\n      }\n    }\n  };\n  const handleStatementClick = statement => {\n    if (isAnswered) return;\n    setIsAnswered(true);\n    setSelected(statement);\n    if (statement.isFiction) {\n      correctSound.triggerAttackRelease(\"C4\", \"8n\");\n      markQuestionCorrect(currentSet.id);\n      setCorrectAnswers(prev => prev + 1);\n      const pointsWon = 30;\n      setRoundScore(prev => prev + pointsWon);\n      addPoints(pointsWon);\n    } else {\n      wrongSound.triggerAttackRelease(\"C2\", \"8n\");\n    }\n    setTimeout(handleNextQuestion, 3000);\n  };\n  if (isGameOver) {\n    const stats = {\n      score: roundScore,\n      correct: correctAnswers,\n      total: 5,\n      perfectionBonus: correctAnswers === 5 ? 50 : 0\n    };\n    return /*#__PURE__*/_jsxDEV(GameSummary, {\n      stats: stats,\n      onComplete: onGameComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentSet) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-8\",\n    children: \"Loading statements...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-5xl mx-auto bg-amber-50 rounded-2xl shadow-xl border-2 border-amber-200 p-6 md:p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center pb-6 border-b-2 border-amber-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-extrabold text-amber-900 font-serif\",\n        children: gameData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-1 text-amber-800\",\n        children: [\"Question \", currentQuestionIndex + 1, \" of 5: Find the fictional statement.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-8 mt-8\",\n        children: currentSet.statements.map((stmt, index) => /*#__PURE__*/_jsxDEV(StatementCard, {\n          statement: stmt,\n          onSelect: handleStatementClick,\n          isAnswered: isAnswered,\n          isSelected: selected === stmt,\n          isFiction: stmt.isFiction\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this))\n      }, currentQuestionIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(FactOrFiction, \"7gtua7eK+QiMZO0S0k1aLh2wuGA=\", false, function () {\n  return [useGame];\n});\n_c2 = FactOrFiction;\nvar _c, _c2;\n$RefreshReg$(_c, \"StatementCard\");\n$RefreshReg$(_c2, \"FactOrFiction\");","map":{"version":3,"names":["React","useState","useEffect","sagaData","useGame","motion","AnimatePresence","GameSummary","jsxDEV","_jsxDEV","getSmartQuestions","questionBank","answeredQIDs","num","unanswered","filter","q","has","id","shuffledUnanswered","sort","Math","random","selected","slice","length","answered","shuffledAnswered","push","correctSound","window","Tone","Synth","toDestination","wrongSound","oscillator","type","StatementCard","statement","onSelect","isAnswered","isSelected","isFiction","getCardStyle","div","onClick","className","whileHover","y","scale","children","text","fileName","_jsxFileName","lineNumber","columnNumber","initial","opacity","rotate","animate","_c","FactOrFiction","onGameComplete","_s","addPoints","correctlyAnsweredQIDs","markQuestionCorrect","gameData","games","factOrFiction","gameQuestions","setGameQuestions","currentQuestionIndex","setCurrentQuestionIndex","correctAnswers","setCorrectAnswers","roundScore","setRoundScore","setSelected","setIsAnswered","isGameOver","setIsGameOver","currentSet","handleNextQuestion","nextQuestionIndex","handleStatementClick","triggerAttackRelease","prev","pointsWon","setTimeout","stats","score","correct","total","perfectionBonus","onComplete","title","mode","exit","statements","map","stmt","index","_c2","$RefreshReg$"],"sources":["/Users/tatvajain/Downloads/culturoquest-frontend/src/components/games/FactOrFiction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport sagaData from '../../data/culturalTrivia.json';\nimport { useGame } from '../../context/GameContext';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport GameSummary from '../common/GameSummary';\n\n// --- Smart Question Selector ---\nconst getSmartQuestions = (questionBank, answeredQIDs, num) => {\n  const unanswered = questionBank.filter(q => !answeredQIDs.has(q.id));\n  const shuffledUnanswered = [...unanswered].sort(() => 0.5 - Math.random());\n  let selected = shuffledUnanswered.slice(0, num);\n  if (selected.length < num) {\n    const answered = questionBank.filter(q => answeredQIDs.has(q.id));\n    const shuffledAnswered = [...answered].sort(() => 0.5 - Math.random());\n    selected.push(...shuffledAnswered.slice(0, num - selected.length));\n  }\n  return selected;\n};\n\nconst correctSound = new window.Tone.Synth().toDestination();\nconst wrongSound = new window.Tone.Synth({ oscillator: { type: 'square' } }).toDestination();\n\n// --- New UI Sub-Component ---\nconst StatementCard = ({ statement, onSelect, isAnswered,isSelected, isFiction }) => {\n    const getCardStyle = () => {\n        if (!isAnswered) return 'bg-white hover:bg-amber-50 hover:shadow-xl';\n        if (isFiction) return 'bg-green-100 border-green-400';\n        if (isSelected && !isFiction) return 'bg-red-100 border-red-400';\n        return 'bg-white opacity-60';\n    };\n\n    return (\n        <motion.div\n            onClick={() => onSelect(statement)}\n            className={`relative p-6 rounded-lg border-2 cursor-pointer transition-all duration-300 h-full flex flex-col justify-center ${getCardStyle()}`}\n            whileHover={!isAnswered ? { y: -10, scale: 1.05 } : {}}\n        >\n            <p className=\"text-center text-slate-700 font-medium text-lg\">{statement.text}</p>\n            {isAnswered && (\n                 <motion.div \n                    initial={{scale: 0, opacity: 0, rotate: -30}} \n                    animate={{scale: 1, opacity: 1, rotate: -15}} \n                    className={`absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-5xl font-black uppercase tracking-widest pointer-events-none ${isFiction ? 'text-red-500/80' : 'text-green-500/80'}`}\n                >\n                    {isFiction ? 'Fiction' : 'Fact'}\n                </motion.div>\n            )}\n        </motion.div>\n    );\n};\n\n\nexport default function FactOrFiction({ onGameComplete }) {\n  const { addPoints, correctlyAnsweredQIDs, markQuestionCorrect } = useGame();\n  const gameData = sagaData.games.factOrFiction;\n  \n  const [gameQuestions, setGameQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [roundScore, setRoundScore] = useState(0);\n  const [selected, setSelected] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  useEffect(() => {\n    setGameQuestions(getSmartQuestions(gameData.questionBank, correctlyAnsweredQIDs, 5));\n  }, []);\n\n  const currentSet = gameQuestions[currentQuestionIndex];\n\n  const handleNextQuestion = () => {\n    const nextQuestionIndex = currentQuestionIndex + 1;\n    if (nextQuestionIndex < gameQuestions.length) {\n        setCurrentQuestionIndex(nextQuestionIndex);\n        setIsAnswered(false);\n        setSelected(null);\n    } else {\n        setIsGameOver(true);\n        if (correctAnswers === 5) {\n            addPoints(50);\n        }\n    }\n  };\n\n  const handleStatementClick = (statement) => {\n    if (isAnswered) return;\n    setIsAnswered(true);\n    setSelected(statement);\n\n    if (statement.isFiction) {\n      correctSound.triggerAttackRelease(\"C4\", \"8n\");\n      markQuestionCorrect(currentSet.id);\n      setCorrectAnswers(prev => prev + 1);\n      const pointsWon = 30;\n      setRoundScore(prev => prev + pointsWon);\n      addPoints(pointsWon);\n    } else {\n      wrongSound.triggerAttackRelease(\"C2\", \"8n\");\n    }\n    setTimeout(handleNextQuestion, 3000);\n  };\n\n  if (isGameOver) {\n    const stats = {\n      score: roundScore,\n      correct: correctAnswers,\n      total: 5,\n      perfectionBonus: correctAnswers === 5 ? 50 : 0\n    };\n    return <GameSummary stats={stats} onComplete={onGameComplete} />;\n  }\n\n  if (!currentSet) return <div className=\"text-center p-8\">Loading statements...</div>;\n  \n  return (\n    <div className=\"w-full max-w-5xl mx-auto bg-amber-50 rounded-2xl shadow-xl border-2 border-amber-200 p-6 md:p-8\">\n      <div className=\"text-center pb-6 border-b-2 border-amber-200\">\n        <h2 className=\"text-3xl font-extrabold text-amber-900 font-serif\">{gameData.title}</h2>\n        <p className=\"mt-1 text-amber-800\">Question {currentQuestionIndex + 1} of 5: Find the fictional statement.</p>\n      </div>\n      <AnimatePresence mode=\"wait\">\n        <motion.div\n            key={currentQuestionIndex}\n            initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}\n            className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mt-8\"\n        >\n          {currentSet.statements.map((stmt, index) => (\n              <StatementCard\n                key={index}\n                statement={stmt}\n                onSelect={handleStatementClick}\n                isAnswered={isAnswered}\n                isSelected={selected === stmt}\n                isFiction={stmt.isFiction}\n              />\n          ))}\n        </motion.div>\n      </AnimatePresence>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/tatvajain/Downloads/culturoquest-frontend/src/context/GameContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContext = /*#__PURE__*/createContext(null);\nexport const useGame = () => {\n  _s();\n  return useContext(GameContext);\n};\n_s(useGame, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const GameProvider = ({\n  children\n}) => {\n  _s2();\n  const [questPoints, setQuestPoints] = useState(1000);\n  const [ownedItems, setOwnedItems] = useState([]);\n  // Add state for the user's selected avatar\n  const [selectedAvatar, setSelectedAvatar] = useState(localStorage.getItem('userAvatar') || 'default');\n  const addPoints = amount => {\n    setQuestPoints(prevPoints => prevPoints + amount);\n  };\n  const buyItem = item => {\n    if (questPoints >= item.price && !ownedItems.includes(item.id)) {\n      setQuestPoints(prevPoints => prevPoints - item.price);\n      setOwnedItems(prevOwned => [...prevOwned, item.id]);\n      return true;\n    }\n    return false;\n  };\n\n  // Function to change the avatar\n  const setAvatar = avatarId => {\n    localStorage.setItem('userAvatar', avatarId); // Save choice to local storage\n    setSelectedAvatar(avatarId);\n  };\n  const value = {\n    questPoints,\n    addPoints,\n    ownedItems,\n    buyItem,\n    selectedAvatar,\n    setAvatar\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n_s2(GameProvider, \"Pv9hWFjhKQYW3S1j5L39hWst7ZM=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","GameContext","useGame","_s","GameProvider","children","_s2","questPoints","setQuestPoints","ownedItems","setOwnedItems","selectedAvatar","setSelectedAvatar","localStorage","getItem","addPoints","amount","prevPoints","buyItem","item","price","includes","id","prevOwned","setAvatar","avatarId","setItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tatvajain/Downloads/culturoquest-frontend/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst GameContext = createContext(null);\n\nexport const useGame = () => useContext(GameContext);\n\nexport const GameProvider = ({ children }) => {\n  const [questPoints, setQuestPoints] = useState(1000);\n  const [ownedItems, setOwnedItems] = useState([]);\n  // Add state for the user's selected avatar\n  const [selectedAvatar, setSelectedAvatar] = useState(localStorage.getItem('userAvatar') || 'default');\n\n  const addPoints = (amount) => {\n    setQuestPoints(prevPoints => prevPoints + amount);\n  };\n\n  const buyItem = (item) => {\n    if (questPoints >= item.price && !ownedItems.includes(item.id)) {\n      setQuestPoints(prevPoints => prevPoints - item.price);\n      setOwnedItems(prevOwned => [...prevOwned, item.id]);\n      return true;\n    }\n    return false;\n  };\n  \n  // Function to change the avatar\n  const setAvatar = (avatarId) => {\n    localStorage.setItem('userAvatar', avatarId); // Save choice to local storage\n    setSelectedAvatar(avatarId);\n  };\n\n  const value = { questPoints, addPoints, ownedItems, buyItem, selectedAvatar, setAvatar };\n\n  return <GameContext.Provider value={value}>{children}</GameContext.Provider>;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAACiB,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,IAAI,SAAS,CAAC;EAErG,MAAMC,SAAS,GAAIC,MAAM,IAAK;IAC5BR,cAAc,CAACS,UAAU,IAAIA,UAAU,GAAGD,MAAM,CAAC;EACnD,CAAC;EAED,MAAME,OAAO,GAAIC,IAAI,IAAK;IACxB,IAAIZ,WAAW,IAAIY,IAAI,CAACC,KAAK,IAAI,CAACX,UAAU,CAACY,QAAQ,CAACF,IAAI,CAACG,EAAE,CAAC,EAAE;MAC9Dd,cAAc,CAACS,UAAU,IAAIA,UAAU,GAAGE,IAAI,CAACC,KAAK,CAAC;MACrDV,aAAa,CAACa,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAEJ,IAAI,CAACG,EAAE,CAAC,CAAC;MACnD,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;;EAED;EACA,MAAME,SAAS,GAAIC,QAAQ,IAAK;IAC9BZ,YAAY,CAACa,OAAO,CAAC,YAAY,EAAED,QAAQ,CAAC,CAAC,CAAC;IAC9Cb,iBAAiB,CAACa,QAAQ,CAAC;EAC7B,CAAC;EAED,MAAME,KAAK,GAAG;IAAEpB,WAAW;IAAEQ,SAAS;IAAEN,UAAU;IAAES,OAAO;IAAEP,cAAc;IAAEa;EAAU,CAAC;EAExF,oBAAOxB,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EAAEA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAAC1B,GAAA,CA5BWF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/tatvajain/Downloads/culturoquest-frontend/src/components/games/CulturalMatchUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport sagaData from '../../data/culturalTrivia.json';\nimport { useGame } from '../../context/GameContext';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport GameSummary from '../common/GameSummary';\n\n// --- Smart Question Selector ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getSmartQuestions = (questionBank, answeredQIDs, num) => {\n  const unanswered = questionBank.filter(q => !answeredQIDs.has(q.id));\n  const shuffledUnanswered = [...unanswered].sort(() => 0.5 - Math.random());\n  let selected = shuffledUnanswered.slice(0, num);\n  if (selected.length < num) {\n    const answered = questionBank.filter(q => answeredQIDs.has(q.id));\n    const shuffledAnswered = [...answered].sort(() => 0.5 - Math.random());\n    selected.push(...shuffledAnswered.slice(0, num - selected.length));\n  }\n  return selected;\n};\n\n// --- Sound Effects ---\nconst correctSound = new window.Tone.Synth().toDestination();\nconst wrongSound = new window.Tone.Synth({\n  oscillator: {\n    type: 'square'\n  }\n}).toDestination();\nexport default function CulturalMatchUp({\n  onGameComplete\n}) {\n  _s();\n  const {\n    addPoints,\n    correctlyAnsweredQIDs,\n    markQuestionCorrect\n  } = useGame();\n  const gameData = sagaData.games.culturalMatchUp;\n  const [gameQuestions, setGameQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [roundScore, setRoundScore] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(7);\n  useEffect(() => {\n    setGameQuestions(getSmartQuestions(gameData.questionBank, correctlyAnsweredQIDs, 5));\n  }, []);\n  const currentQuestion = gameQuestions[currentQuestionIndex];\n  const handleNextQuestion = () => {\n    const nextQuestionIndex = currentQuestionIndex + 1;\n    setCurrentQuestionIndex(nextQuestionIndex);\n    setIsAnswered(false);\n    setSelectedOption(null);\n    setTimeLeft(7); // Reset timer\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (isAnswered || isGameOver) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime <= 1) {\n          wrongSound.triggerAttackRelease(\"C2\", \"8n\", \"+0.1\");\n          // Check for game over when timer runs out on the last question\n          if (currentQuestionIndex === gameQuestions.length - 1) {\n            setIsGameOver(true);\n          } else {\n            handleNextQuestion();\n          }\n          return 7;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestionIndex, isAnswered, isGameOver]);\n  const handleOptionClick = option => {\n    if (isAnswered) return;\n    setIsAnswered(true);\n    setSelectedOption(option);\n    const isCorrect = option === currentQuestion.answer;\n    let newCorrectCount = correctAnswers;\n    if (isCorrect) {\n      correctSound.triggerAttackRelease(\"C4\", \"8n\", \"+0.1\");\n      markQuestionCorrect(currentQuestion.id);\n      newCorrectCount = correctAnswers + 1;\n      setCorrectAnswers(newCorrectCount);\n      const pointsWon = 30; // Award flat 30 points\n      setRoundScore(prev => prev + pointsWon);\n      addPoints(pointsWon);\n    } else {\n      wrongSound.triggerAttackRelease(\"C2\", \"8n\", \"+0.1\");\n    }\n\n    // --- THIS IS THE FIX ---\n    // We now check for game over right after an answer is given, using the up-to-date count.\n    if (currentQuestionIndex === gameQuestions.length - 1) {\n      setIsGameOver(true);\n      // If this correct answer was the 5th one, award the bonus\n      if (isCorrect && newCorrectCount === 5) {\n        addPoints(50);\n      }\n    } else {\n      setTimeout(handleNextQuestion, 1500);\n    }\n  };\n  if (isGameOver) {\n    const stats = {\n      score: roundScore,\n      correct: correctAnswers,\n      total: 5,\n      perfectionBonus: correctAnswers === 5 ? 50 : 0\n    };\n    return /*#__PURE__*/_jsxDEV(GameSummary, {\n      stats: stats,\n      onComplete: onGameComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentQuestion) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-8\",\n    children: \"Loading questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 32\n  }, this);\n  const getButtonStyle = option => {\n    if (!isAnswered) {\n      return 'bg-slate-100 border-slate-200 hover:bg-teal-100 hover:border-teal-400';\n    }\n    if (option === currentQuestion.answer) {\n      return 'bg-green-500 border-green-500 text-white';\n    }\n    if (option === selectedOption) {\n      return 'bg-red-500 border-red-500 text-white';\n    }\n    return 'bg-slate-100 border-slate-200 opacity-50';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-2xl mx-auto bg-white rounded-2xl shadow-xl border border-slate-200 relative overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-0 h-2 bg-gradient-to-r from-orange-400 to-red-500 transition-all duration-1000 ease-linear\",\n      style: {\n        width: `${timeLeft / 7 * 100}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 text-center border-b-2 border-slate-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-extrabold gradient-text\",\n        children: gameData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-slate-600\",\n        children: [\"Question \", currentQuestionIndex + 1, \" of 5\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 md:p-8\",\n      children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n        mode: \"wait\",\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            x: 50,\n            opacity: 0\n          },\n          animate: {\n            x: 0,\n            opacity: 1\n          },\n          exit: {\n            x: -50,\n            opacity: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: \"text-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg text-slate-600\",\n            children: \"Match this item:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-4xl font-bold text-slate-800 mt-2\",\n            children: currentQuestion.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, currentQuestionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4\",\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(motion.button, {\n          onClick: () => handleOptionClick(option),\n          disabled: isAnswered,\n          whileTap: {\n            scale: 0.95\n          },\n          className: `p-4 rounded-lg text-lg font-semibold text-center transition-all duration-300 border-2 ${getButtonStyle(option)}`,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(CulturalMatchUp, \"7qZhS2Jk1LRChhYIjUsiwoAJq/k=\", false, function () {\n  return [useGame];\n});\n_c = CulturalMatchUp;\nvar _c;\n$RefreshReg$(_c, \"CulturalMatchUp\");","map":{"version":3,"names":["React","useState","useEffect","sagaData","useGame","motion","AnimatePresence","GameSummary","jsxDEV","_jsxDEV","getSmartQuestions","questionBank","answeredQIDs","num","unanswered","filter","q","has","id","shuffledUnanswered","sort","Math","random","selected","slice","length","answered","shuffledAnswered","push","correctSound","window","Tone","Synth","toDestination","wrongSound","oscillator","type","CulturalMatchUp","onGameComplete","_s","addPoints","correctlyAnsweredQIDs","markQuestionCorrect","gameData","games","culturalMatchUp","gameQuestions","setGameQuestions","currentQuestionIndex","setCurrentQuestionIndex","correctAnswers","setCorrectAnswers","roundScore","setRoundScore","selectedOption","setSelectedOption","isAnswered","setIsAnswered","isGameOver","setIsGameOver","timeLeft","setTimeLeft","currentQuestion","handleNextQuestion","nextQuestionIndex","timer","setInterval","prevTime","triggerAttackRelease","clearInterval","handleOptionClick","option","isCorrect","answer","newCorrectCount","pointsWon","prev","setTimeout","stats","score","correct","total","perfectionBonus","onComplete","fileName","_jsxFileName","lineNumber","columnNumber","className","children","getButtonStyle","style","width","title","mode","div","initial","x","opacity","animate","exit","transition","duration","item","options","map","button","onClick","disabled","whileTap","scale","_c","$RefreshReg$"],"sources":["/Users/tatvajain/Downloads/culturoquest-frontend/src/components/games/CulturalMatchUp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport sagaData from '../../data/culturalTrivia.json';\nimport { useGame } from '../../context/GameContext';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport GameSummary from '../common/GameSummary';\n\n// --- Smart Question Selector ---\nconst getSmartQuestions = (questionBank, answeredQIDs, num) => {\n  const unanswered = questionBank.filter(q => !answeredQIDs.has(q.id));\n  const shuffledUnanswered = [...unanswered].sort(() => 0.5 - Math.random());\n  let selected = shuffledUnanswered.slice(0, num);\n  if (selected.length < num) {\n    const answered = questionBank.filter(q => answeredQIDs.has(q.id));\n    const shuffledAnswered = [...answered].sort(() => 0.5 - Math.random());\n    selected.push(...shuffledAnswered.slice(0, num - selected.length));\n  }\n  return selected;\n};\n\n// --- Sound Effects ---\nconst correctSound = new window.Tone.Synth().toDestination();\nconst wrongSound = new window.Tone.Synth({ oscillator: { type: 'square' } }).toDestination();\n\nexport default function CulturalMatchUp({ onGameComplete }) {\n  const { addPoints, correctlyAnsweredQIDs, markQuestionCorrect } = useGame();\n  const gameData = sagaData.games.culturalMatchUp;\n  \n  const [gameQuestions, setGameQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [roundScore, setRoundScore] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(7);\n\n  useEffect(() => {\n    setGameQuestions(getSmartQuestions(gameData.questionBank, correctlyAnsweredQIDs, 5));\n  }, []);\n\n  const currentQuestion = gameQuestions[currentQuestionIndex];\n\n  const handleNextQuestion = () => {\n    const nextQuestionIndex = currentQuestionIndex + 1;\n    setCurrentQuestionIndex(nextQuestionIndex);\n    setIsAnswered(false);\n    setSelectedOption(null);\n    setTimeLeft(7); // Reset timer\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (isAnswered || isGameOver) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime <= 1) {\n          wrongSound.triggerAttackRelease(\"C2\", \"8n\", \"+0.1\");\n          // Check for game over when timer runs out on the last question\n          if (currentQuestionIndex === gameQuestions.length - 1) {\n            setIsGameOver(true);\n          } else {\n            handleNextQuestion();\n          }\n          return 7;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestionIndex, isAnswered, isGameOver]);\n\n  const handleOptionClick = (option) => {\n    if (isAnswered) return;\n    setIsAnswered(true);\n    setSelectedOption(option);\n\n    const isCorrect = option === currentQuestion.answer;\n    let newCorrectCount = correctAnswers;\n\n    if (isCorrect) {\n      correctSound.triggerAttackRelease(\"C4\", \"8n\", \"+0.1\");\n      markQuestionCorrect(currentQuestion.id);\n      \n      newCorrectCount = correctAnswers + 1;\n      setCorrectAnswers(newCorrectCount);\n      \n      const pointsWon = 30; // Award flat 30 points\n      setRoundScore(prev => prev + pointsWon);\n      addPoints(pointsWon);\n    } else {\n      wrongSound.triggerAttackRelease(\"C2\", \"8n\", \"+0.1\");\n    }\n    \n    // --- THIS IS THE FIX ---\n    // We now check for game over right after an answer is given, using the up-to-date count.\n    if (currentQuestionIndex === gameQuestions.length - 1) {\n      setIsGameOver(true);\n      // If this correct answer was the 5th one, award the bonus\n      if (isCorrect && newCorrectCount === 5) {\n        addPoints(50);\n      }\n    } else {\n      setTimeout(handleNextQuestion, 1500);\n    }\n  };\n  \n  if (isGameOver) {\n    const stats = {\n      score: roundScore,\n      correct: correctAnswers,\n      total: 5,\n      perfectionBonus: correctAnswers === 5 ? 50 : 0\n    };\n    return <GameSummary stats={stats} onComplete={onGameComplete} />;\n  }\n\n  if (!currentQuestion) return <div className=\"text-center p-8\">Loading questions...</div>;\n  \n  const getButtonStyle = (option) => {\n    if (!isAnswered) {\n      return 'bg-slate-100 border-slate-200 hover:bg-teal-100 hover:border-teal-400';\n    }\n    if (option === currentQuestion.answer) {\n      return 'bg-green-500 border-green-500 text-white';\n    }\n    if (option === selectedOption) {\n      return 'bg-red-500 border-red-500 text-white';\n    }\n    return 'bg-slate-100 border-slate-200 opacity-50';\n  };\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto bg-white rounded-2xl shadow-xl border border-slate-200 relative overflow-hidden\">\n       <div \n        className=\"absolute top-0 left-0 h-2 bg-gradient-to-r from-orange-400 to-red-500 transition-all duration-1000 ease-linear\" \n        style={{ width: `${(timeLeft / 7) * 100}%` }}\n      ></div>\n      <div className=\"p-6 text-center border-b-2 border-slate-200\">\n        <h2 className=\"text-3xl font-extrabold gradient-text\">{gameData.title}</h2>\n        <p className=\"mt-2 text-slate-600\">Question {currentQuestionIndex + 1} of 5</p>\n      </div>\n      <div className=\"p-6 md:p-8\">\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={currentQuestionIndex}\n            initial={{ x: 50, opacity: 0 }}\n            animate={{ x: 0, opacity: 1 }}\n            exit={{ x: -50, opacity: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"text-center mb-6\"\n          >\n            <p className=\"text-lg text-slate-600\">Match this item:</p>\n            <h3 className=\"text-4xl font-bold text-slate-800 mt-2\">{currentQuestion.item}</h3>\n          </motion.div>\n        </AnimatePresence>\n        <div className=\"grid grid-cols-2 gap-4\">\n          {currentQuestion.options.map((option) => (\n            <motion.button\n              key={option}\n              onClick={() => handleOptionClick(option)}\n              disabled={isAnswered}\n              whileTap={{ scale: 0.95 }}\n              className={`p-4 rounded-lg text-lg font-semibold text-center transition-all duration-300 border-2 ${getButtonStyle(option)}`}\n            >\n              {option}\n            </motion.button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
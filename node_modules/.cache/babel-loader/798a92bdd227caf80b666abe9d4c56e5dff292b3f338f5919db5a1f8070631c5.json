{"ast":null,"code":"var _jsxFileName = \"/Users/tatvajain/Downloads/culturoquest-frontend/src/components/games/CulturalMatchUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport sagaData from '../../data/culturalTrivia.json';\nimport { useGame } from '../../context/GameContext';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport GameSummary from '../common/GameSummary';\n\n// --- New Smart Question Selector ---\n// This function prioritizes questions the user hasn't answered correctly yet.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getSmartQuestions = (questionBank, answeredQIDs, num) => {\n  // Find all questions that are NOT in the 'answered' set\n  const unanswered = questionBank.filter(q => !answeredQIDs.has(q.id));\n  // Shuffle them to keep it random\n  const shuffledUnanswered = [...unanswered].sort(() => 0.5 - Math.random());\n\n  // Take the first 5 (or fewer) unanswered questions\n  let selected = shuffledUnanswered.slice(0, num);\n\n  // If we don't have enough unanswered questions, fill the rest with previously answered ones\n  if (selected.length < num) {\n    const answered = questionBank.filter(q => answeredQIDs.has(q.id));\n    const shuffledAnswered = [...answered].sort(() => 0.5 - Math.random());\n    selected.push(...shuffledAnswered.slice(0, num - selected.length));\n  }\n  return selected;\n};\nexport default function CulturalMatchUp({\n  onGameComplete\n}) {\n  _s();\n  const {\n    addPoints,\n    correctlyAnsweredQIDs,\n    markQuestionCorrect\n  } = useGame();\n  const gameData = sagaData.games.culturalMatchUp;\n  const [gameQuestions, setGameQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [roundScore, setRoundScore] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  // When the game starts, get 5 smart questions\n  useEffect(() => {\n    setGameQuestions(getSmartQuestions(gameData.questionBank, correctlyAnsweredQIDs, 5));\n  }, [gameData.questionBank, correctlyAnsweredQIDs]);\n  const currentQuestion = gameQuestions[currentQuestionIndex];\n  const handleNextQuestion = () => {\n    const nextQuestionIndex = currentQuestionIndex + 1;\n    if (nextQuestionIndex < gameQuestions.length) {\n      setCurrentQuestionIndex(nextQuestionIndex);\n      setIsAnswered(false);\n      setSelectedOption(null);\n    } else {\n      // --- Game Over Logic ---\n      setIsGameOver(true);\n      // Award the 50 QP perfection bonus if all 5 were correct\n      if (correctAnswers === 5) {\n        addPoints(50);\n      }\n    }\n  };\n  const handleOptionClick = option => {\n    if (isAnswered) return;\n    setIsAnswered(true);\n    setSelectedOption(option);\n    if (option === currentQuestion.answer) {\n      // --- New Logic ---\n      markQuestionCorrect(currentQuestion.id); // 1. Tell the \"brain\" we mastered this question\n      setCorrectAnswers(prev => prev + 1);\n      const pointsWon = 30; // 2. Award the new flat 30 points\n      setRoundScore(prev => prev + pointsWon);\n      addPoints(pointsWon);\n    }\n    setTimeout(handleNextQuestion, 1500);\n  };\n  if (isGameOver) {\n    const stats = {\n      score: roundScore,\n      correct: correctAnswers,\n      total: 5,\n      perfectionBonus: correctAnswers === 5 ? 50 : 0 // 3. Use the new 50 point bonus\n    };\n    return /*#__PURE__*/_jsxDEV(GameSummary, {\n      stats: stats,\n      onComplete: onGameComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n  if (!currentQuestion) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-8\",\n    children: \"Loading questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 32\n  }, this);\n  const isCorrect = selectedOption === currentQuestion.answer;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-2xl mx-auto bg-white rounded-2xl shadow-xl border border-slate-200 relative overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 text-center border-b-2 border-slate-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-extrabold gradient-text\",\n        children: gameData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-slate-600\",\n        children: [\"Question \", currentQuestionIndex + 1, \" of 5\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 md:p-8\",\n      children: [/*#__PURE__*/_jsxDEV(AnimatePresence, {\n        mode: \"wait\",\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            x: 50,\n            opacity: 0\n          },\n          animate: {\n            x: 0,\n            opacity: 1\n          },\n          exit: {\n            x: -50,\n            opacity: 0\n          },\n          transition: {\n            duration: 0.3\n          },\n          className: \"text-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg text-slate-600\",\n            children: \"Match this item:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-4xl font-bold text-slate-800 mt-2\",\n            children: currentQuestion.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, currentQuestionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4\",\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(motion.button, {\n          onClick: () => handleOptionClick(option),\n          disabled: isAnswered,\n          whileTap: {\n            scale: 0.95\n          },\n          className: `p-4 rounded-lg text-lg font-semibold text-center transition-all duration-300 border-2 \n                ${isAnswered && option === currentQuestion.answer ? 'bg-green-500 border-green-500 text-white' : ''}\n                ${isAnswered && option === selectedOption && !isCorrect ? 'bg-red-500 border-red-500 text-white' : ''}\n                ${!isAnswered ? 'bg-slate-100 border-slate-200 hover:bg-teal-100 hover:border-teal-400' : ''}\n              `,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(CulturalMatchUp, \"Kov7N1iMLp/nMCZUPkuCPj02MvQ=\", false, function () {\n  return [useGame];\n});\n_c = CulturalMatchUp;\nvar _c;\n$RefreshReg$(_c, \"CulturalMatchUp\");","map":{"version":3,"names":["React","useState","useEffect","sagaData","useGame","motion","AnimatePresence","GameSummary","jsxDEV","_jsxDEV","getSmartQuestions","questionBank","answeredQIDs","num","unanswered","filter","q","has","id","shuffledUnanswered","sort","Math","random","selected","slice","length","answered","shuffledAnswered","push","CulturalMatchUp","onGameComplete","_s","addPoints","correctlyAnsweredQIDs","markQuestionCorrect","gameData","games","culturalMatchUp","gameQuestions","setGameQuestions","currentQuestionIndex","setCurrentQuestionIndex","correctAnswers","setCorrectAnswers","roundScore","setRoundScore","selectedOption","setSelectedOption","isAnswered","setIsAnswered","isGameOver","setIsGameOver","currentQuestion","handleNextQuestion","nextQuestionIndex","handleOptionClick","option","answer","prev","pointsWon","setTimeout","stats","score","correct","total","perfectionBonus","onComplete","fileName","_jsxFileName","lineNumber","columnNumber","className","children","isCorrect","title","mode","div","initial","x","opacity","animate","exit","transition","duration","item","options","map","button","onClick","disabled","whileTap","scale","_c","$RefreshReg$"],"sources":["/Users/tatvajain/Downloads/culturoquest-frontend/src/components/games/CulturalMatchUp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport sagaData from '../../data/culturalTrivia.json';\nimport { useGame } from '../../context/GameContext';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport GameSummary from '../common/GameSummary';\n\n// --- New Smart Question Selector ---\n// This function prioritizes questions the user hasn't answered correctly yet.\nconst getSmartQuestions = (questionBank, answeredQIDs, num) => {\n  // Find all questions that are NOT in the 'answered' set\n  const unanswered = questionBank.filter(q => !answeredQIDs.has(q.id));\n  // Shuffle them to keep it random\n  const shuffledUnanswered = [...unanswered].sort(() => 0.5 - Math.random());\n  \n  // Take the first 5 (or fewer) unanswered questions\n  let selected = shuffledUnanswered.slice(0, num);\n\n  // If we don't have enough unanswered questions, fill the rest with previously answered ones\n  if (selected.length < num) {\n    const answered = questionBank.filter(q => answeredQIDs.has(q.id));\n    const shuffledAnswered = [...answered].sort(() => 0.5 - Math.random());\n    selected.push(...shuffledAnswered.slice(0, num - selected.length));\n  }\n  \n  return selected;\n};\n\nexport default function CulturalMatchUp({ onGameComplete }) {\n  const { addPoints, correctlyAnsweredQIDs, markQuestionCorrect } = useGame();\n  const gameData = sagaData.games.culturalMatchUp;\n  \n  const [gameQuestions, setGameQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [roundScore, setRoundScore] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  // When the game starts, get 5 smart questions\n  useEffect(() => {\n    setGameQuestions(getSmartQuestions(gameData.questionBank, correctlyAnsweredQIDs, 5));\n  }, [gameData.questionBank, correctlyAnsweredQIDs]);\n\n  const currentQuestion = gameQuestions[currentQuestionIndex];\n\n  const handleNextQuestion = () => {\n    const nextQuestionIndex = currentQuestionIndex + 1;\n    if (nextQuestionIndex < gameQuestions.length) {\n      setCurrentQuestionIndex(nextQuestionIndex);\n      setIsAnswered(false);\n      setSelectedOption(null);\n    } else {\n      // --- Game Over Logic ---\n      setIsGameOver(true);\n      // Award the 50 QP perfection bonus if all 5 were correct\n      if (correctAnswers === 5) {\n        addPoints(50);\n      }\n    }\n  };\n\n  const handleOptionClick = (option) => {\n    if (isAnswered) return;\n    setIsAnswered(true);\n    setSelectedOption(option);\n\n    if (option === currentQuestion.answer) {\n      // --- New Logic ---\n      markQuestionCorrect(currentQuestion.id); // 1. Tell the \"brain\" we mastered this question\n      setCorrectAnswers(prev => prev + 1);\n      const pointsWon = 30; // 2. Award the new flat 30 points\n      setRoundScore(prev => prev + pointsWon);\n      addPoints(pointsWon);\n    }\n    \n    setTimeout(handleNextQuestion, 1500);\n  };\n  \n  if (isGameOver) {\n    const stats = {\n      score: roundScore,\n      correct: correctAnswers,\n      total: 5,\n      perfectionBonus: correctAnswers === 5 ? 50 : 0 // 3. Use the new 50 point bonus\n    };\n    return <GameSummary stats={stats} onComplete={onGameComplete} />;\n  }\n\n  if (!currentQuestion) return <div className=\"text-center p-8\">Loading questions...</div>;\n\n  const isCorrect = selectedOption === currentQuestion.answer;\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto bg-white rounded-2xl shadow-xl border border-slate-200 relative overflow-hidden\">\n      <div className=\"p-6 text-center border-b-2 border-slate-200\">\n        <h2 className=\"text-3xl font-extrabold gradient-text\">{gameData.title}</h2>\n        <p className=\"mt-2 text-slate-600\">Question {currentQuestionIndex + 1} of 5</p>\n      </div>\n      <div className=\"p-6 md:p-8\">\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={currentQuestionIndex}\n            initial={{ x: 50, opacity: 0 }}\n            animate={{ x: 0, opacity: 1 }}\n            exit={{ x: -50, opacity: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"text-center mb-6\"\n          >\n            <p className=\"text-lg text-slate-600\">Match this item:</p>\n            <h3 className=\"text-4xl font-bold text-slate-800 mt-2\">{currentQuestion.item}</h3>\n          </motion.div>\n        </AnimatePresence>\n        <div className=\"grid grid-cols-2 gap-4\">\n          {currentQuestion.options.map((option) => (\n            <motion.button\n              key={option}\n              onClick={() => handleOptionClick(option)}\n              disabled={isAnswered}\n              whileTap={{ scale: 0.95 }}\n              className={`p-4 rounded-lg text-lg font-semibold text-center transition-all duration-300 border-2 \n                ${isAnswered && option === currentQuestion.answer ? 'bg-green-500 border-green-500 text-white' : ''}\n                ${isAnswered && option === selectedOption && !isCorrect ? 'bg-red-500 border-red-500 text-white' : ''}\n                ${!isAnswered ? 'bg-slate-100 border-slate-200 hover:bg-teal-100 hover:border-teal-400' : ''}\n              `}\n            >\n              {option}\n            </motion.button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}